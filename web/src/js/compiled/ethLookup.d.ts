/**
 *
 * This file is auto-generated. Do not edit manually: changes may be erased.
 * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
 * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
 * Aqua version: 0.4.1-240
 *
 */
import { Fluence, FluencePeer } from '@fluencelabs/fluence';
import {
    CallParams,
    callFunction,
    registerService,
} from '@fluencelabs/fluence/dist/internal/compilerSupport/v2';


// Services
export interface EthLookupDef {
    createHashInput: (address: string, salt: string, callParams: CallParams<'address' | 'salt'>) => string | Promise<string>;
    verify: (address: string, record: string, callParams: CallParams<'address' | 'record'>) => { data: string; info: { code: number; message: string; reason: string; success: boolean; }; } | Promise<{ data: string; info: { code: number; message: string; reason: string; success: boolean; }; }>;
}
export function registerEthLookup(service: EthLookupDef): void;
export function registerEthLookup(serviceId: string, service: EthLookupDef): void;
export function registerEthLookup(peer: FluencePeer, service: EthLookupDef): void;
export function registerEthLookup(peer: FluencePeer, serviceId: string, service: EthLookupDef): void;
       

// Functions
 

export function getHash(peerId: string, relayId: string, address: string, salt: string, config?: {ttl?: number}): Promise<string>;
export function getHash(peer: FluencePeer, peerId: string, relayId: string, address: string, salt: string, config?: {ttl?: number}): Promise<string>;

 
export type PutVerifiedEthRecordResult = { data: string; info: { code: number; message: string; reason: string; success: boolean; }; }
export function putVerifiedEthRecord(peerId: string, relayId: string, address: string, salt: string, record: string, config?: {ttl?: number}): Promise<PutVerifiedEthRecordResult>;
export function putVerifiedEthRecord(peer: FluencePeer, peerId: string, relayId: string, address: string, salt: string, record: string, config?: {ttl?: number}): Promise<PutVerifiedEthRecordResult>;

 
export type GetVerifiedEthRecordResult = { data: string; info: { code: number; message: string; reason: string; success: boolean; }; }
export function getVerifiedEthRecord(peerId: string, relayId: string, address: string, salt: string, config?: {ttl?: number}): Promise<GetVerifiedEthRecordResult>;
export function getVerifiedEthRecord(peer: FluencePeer, peerId: string, relayId: string, address: string, salt: string, config?: {ttl?: number}): Promise<GetVerifiedEthRecordResult>;

 
export type GetValueResult = { peer_id: string; relay_id: string[]; service_id: string[]; set_by: string; timestamp_created: number; value: string; weight: number; }
export function getValue(hostId: string, key: string, config?: {ttl?: number}): Promise<GetValueResult>;
export function getValue(peer: FluencePeer, hostId: string, key: string, config?: {ttl?: number}): Promise<GetValueResult>;

 
export type PutValueResult = { error: string; success: boolean; }
export function putValue(hostId: string, key: string, value: string, config?: {ttl?: number}): Promise<PutValueResult>;
export function putValue(peer: FluencePeer, hostId: string, key: string, value: string, config?: {ttl?: number}): Promise<PutValueResult>;
